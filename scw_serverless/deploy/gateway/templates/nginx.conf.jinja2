error_log  /dev/stderr;
pid /tmp/nginx.pid;

events {
    multi_accept       on;
    worker_connections 4096;
}

http {
    access_log /dev/stdout;

    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    resolver               1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 ipv6=off;
    resolver_timeout       2s;

    # Connection header for WebSocket reverse proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    {%- filter indent(width=4) %}
    {% include "method_maps.conf.jinja2" %}
    {%- endfilter %}

    include /etc/nginx/conf.d/*.conf;

    server {
        listen                             8080;
        listen                             [::]:8080;
        server_name gateway;
        error_log stderr info;

        # Security
        include /etc/nginx/helpers/security.conf;
        # Error pages
        include /etc/nginx/helpers/json_errors.conf;
        # Robots
        include /etc/nginx/helpers/robots.conf;

        {% for location in locations recursive %}
        location {{ location.path }} {
            {%- if location.sublocations %}
                {{ loop(location.sublocations) }}
            {%- endif %}

            {%- if location.unallowed_methods %}
            if ($request_method ~ ^({{ location.unallowed_methods | join('|') }})$) {
                return 405;
            }
            {%- endif %}

            set $target {{ location.target }};
            proxy_pass $target;

            {%- filter indent(width=4*loop.depth + 4) %}
            {% include "proxy.conf.jinja2" %}
            {%- endfilter %}
        }
        {%- endfor %}
    }
}
